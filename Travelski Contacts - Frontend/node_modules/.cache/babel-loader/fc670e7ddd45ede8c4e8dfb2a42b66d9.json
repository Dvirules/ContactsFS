{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Num Num\\\\Desktop\\\\TravelSki-Contacts\\\\Travelski Contacts - Frontend\\\\src\\\\Components\\\\ContactForm.js\";\nimport { Component } from \"react\";\nimport \"../Styles/styles.css\";\nimport myAjax from \"../AJAX\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super();\n    this.validatePhone = this.validatePhone.bind(this);\n    this.addContact = this.addContact.bind(this);\n  }\n\n  validatePhone(phoneNumber) {\n    let isValid = true;\n\n    for (let i = 0; i < phoneNumber.length; i++) {\n      if (phoneNumber[i] !== '(' && phoneNumber[i] !== ')' && phoneNumber[i] !== '+' && isNaN(phoneNumber[i])) {\n        isValid = false;\n        break;\n      }\n    }\n\n    return isValid;\n  }\n\n  async addContact(event) {\n    event.preventDefault();\n\n    if (this.validatePhone(event.target.elements.input7.value)) {\n      const contactObj = {\n        \"name\": event.target.elements.input1.value,\n        \"role\": event.target.elements.input2.value,\n        \"location\": event.target.elements.input3.value,\n        \"company\": event.target.elements.input4.value,\n        \"address\": event.target.elements.input5.value,\n        \"state\": event.target.elements.input6.value,\n        \"phone\": event.target.elements.input7.value\n      };\n      await myAjax.AjaxAddContact(contactObj);\n      alert(\"New contact successfully added!\");\n      window.location.href = \"/\";\n    } else alert(\"Phone number invalid. Please make sure only numbers or the '( ) +' signs are provided\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"addHeadline\",\n        children: \" Add a new contact \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addForm\",\n        onSubmit: this.addContact,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input1\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input2\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input3\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input4\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input5\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input6\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input7\",\n          type: \"text\",\n          required: true,\n          placeholder: \"New contact's phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"addButton\",\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["C:/Users/Num Num/Desktop/TravelSki-Contacts/Travelski Contacts - Frontend/src/Components/ContactForm.js"],"names":["Component","myAjax","ContactForm","constructor","validatePhone","bind","addContact","phoneNumber","isValid","i","length","isNaN","event","preventDefault","target","elements","input7","value","contactObj","input1","input2","input3","input4","input5","input6","AjaxAddContact","alert","window","location","href","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport \"../Styles/styles.css\";\r\nimport myAjax from \"../AJAX\";\r\n\r\n\r\nclass ContactForm extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.validatePhone = this.validatePhone.bind(this);\r\n        this.addContact = this.addContact.bind(this);\r\n    }\r\n\r\n    validatePhone(phoneNumber) {\r\n        let isValid = true;\r\n        for (let i = 0; i < phoneNumber.length; i++) {\r\n            if (phoneNumber[i] !== '(' && phoneNumber[i] !== ')' && phoneNumber[i] !== '+' && isNaN(phoneNumber[i])) {\r\n                isValid = false;\r\n                break;\r\n            }\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    async addContact(event) {\r\n        event.preventDefault();\r\n        if (this.validatePhone(event.target.elements.input7.value)) {\r\n            const contactObj = {\r\n                \"name\": event.target.elements.input1.value,\r\n                \"role\": event.target.elements.input2.value,\r\n                \"location\": event.target.elements.input3.value,\r\n                \"company\": event.target.elements.input4.value,\r\n                \"address\": event.target.elements.input5.value,\r\n                \"state\": event.target.elements.input6.value,\r\n                \"phone\": event.target.elements.input7.value\r\n            }\r\n            await myAjax.AjaxAddContact(contactObj);\r\n            alert(\"New contact successfully added!\");\r\n            window.location.href = \"/\";\r\n        }\r\n        else\r\n            alert(\"Phone number invalid. Please make sure only numbers or the '( ) +' signs are provided\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1 id=\"addHeadline\"> Add a new contact </h1>\r\n                <form className=\"addForm\" onSubmit={ this.addContact }>\r\n                    <input id=\"input1\" type=\"text\" required placeholder=\"New contact's name\"/>\r\n                    <input id=\"input2\" type=\"text\" required placeholder=\"New contact's role\"/>\r\n                    <input id=\"input3\" type=\"text\" required placeholder=\"New contact's location\"/>\r\n                    <input id=\"input4\" type=\"text\" required placeholder=\"New contact's company\"/>\r\n                    <input id=\"input5\" type=\"text\" required placeholder=\"New contact's address\"/>\r\n                    <input id=\"input6\" type=\"text\" required placeholder=\"New contact's state\"/>\r\n                    <input id=\"input7\" type=\"text\" required placeholder=\"New contact's phone\"/>\r\n                    <button id=\"addButton\" type=\"submit\">Send</button>\r\n                </form>\r\n            </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}