{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Num Num\\\\Desktop\\\\TravelSki-Contacts\\\\Travelski Contacts - Frontend\\\\src\\\\Components\\\\Main.js\";\nimport { Component } from \"react\";\nimport \"../Styles/styles.css\";\nimport ContactCard from \"./ContactCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.getAllContacts = this.getAllContacts.bind(this);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  do() {\n    alert(\"hi\");\n  }\n\n  getAllContacts() {\n    let request = new XMLHttpRequest();\n    request.open('GET', 'http://localhost:8080/contacts', true);\n\n    request.onload = () => {\n      if (request.status === 200) {\n        let data = JSON.parse(request.responseText);\n        let elementsArr = [];\n        data.forEach((contactObj, index) => {\n          elementsArr.push( /*#__PURE__*/_jsxDEV(ContactCard, {\n            name: contactObj.name,\n            role: contactObj.role,\n            location: contactObj.location,\n            image: contactObj.image,\n            address: contactObj.address,\n            state: contactObj.state,\n            company: contactObj.company,\n            phone: contactObj.phone\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 34\n          }, this));\n        });\n        this.setState({\n          contacts: elementsArr\n        });\n      }\n    };\n\n    request.send();\n  }\n\n  componentDidMount() {\n    this.getAllContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"allCards\",\n      children: this.state.contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Num Num/Desktop/TravelSki-Contacts/Travelski Contacts - Frontend/src/Components/Main.js"],"names":["Component","ContactCard","Main","constructor","getAllContacts","bind","state","contacts","do","alert","request","XMLHttpRequest","open","onload","status","data","JSON","parse","responseText","elementsArr","forEach","contactObj","index","push","name","role","location","image","address","company","phone","setState","send","componentDidMount","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,sBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AAExBG,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,EAAE,GAAG;AACDC,IAAAA,KAAK,CAAC,IAAD,CAAL;AACH;;AAEDL,EAAAA,cAAc,GAAE;AACZ,QAAIM,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoB,gCAApB,EAAsD,IAAtD;;AACAF,IAAAA,OAAO,CAACG,MAAR,GAAiB,MAAM;AACvB,UAAIH,OAAO,CAACI,MAAR,KAAmB,GAAvB,EAA4B;AACxB,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,YAAnB,CAAX;AACA,YAAIC,WAAW,GAAG,EAAlB;AACAJ,QAAAA,IAAI,CAACK,OAAL,CAAa,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAChCH,UAAAA,WAAW,CAACI,IAAZ,eAAiB,QAAC,WAAD;AAEb,YAAA,IAAI,EAAKF,UAAU,CAACG,IAFP;AAGb,YAAA,IAAI,EAAKH,UAAU,CAACI,IAHP;AAIb,YAAA,QAAQ,EAAKJ,UAAU,CAACK,QAJX;AAKb,YAAA,KAAK,EAAKL,UAAU,CAACM,KALR;AAMb,YAAA,OAAO,EAAKN,UAAU,CAACO,OANV;AAOb,YAAA,KAAK,EAAKP,UAAU,CAACf,KAPR;AAQb,YAAA,OAAO,EAAKe,UAAU,CAACQ,OARV;AASb,YAAA,KAAK,EAAKR,UAAU,CAACS;AATR,aACLR,KADK;AAAA;AAAA;AAAA;AAAA,kBAAjB;AAUH,SAXD;AAYA,aAAKS,QAAL,CAAc;AAACxB,UAAAA,QAAQ,EAAEY;AAAX,SAAd;AACC;AACJ,KAlBD;;AAmBAT,IAAAA,OAAO,CAACsB,IAAR;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAK7B,cAAL;AACH;;AAED8B,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,gBACG,KAAK5B,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AA/CuB;;AAkD5B,eAAeL,IAAf","sourcesContent":["import { Component } from \"react\";\r\nimport \"../Styles/styles.css\";\r\nimport ContactCard from \"./ContactCard\";\r\n\r\nclass Main extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.getAllContacts = this.getAllContacts.bind(this);\r\n        this.state = {\r\n            contacts: []\r\n        }\r\n    }\r\n\r\n    do() {\r\n        alert(\"hi\");\r\n    }\r\n\r\n    getAllContacts(){\r\n        let request = new XMLHttpRequest();\r\n        request.open('GET', 'http://localhost:8080/contacts', true);\r\n        request.onload = () => {\r\n        if (request.status === 200) {\r\n            let data = JSON.parse(request.responseText);\r\n            let elementsArr = [];\r\n            data.forEach((contactObj, index) => {\r\n                elementsArr.push(<ContactCard\r\n                    key = { index }\r\n                    name = { contactObj.name }\r\n                    role = { contactObj.role }\r\n                    location = { contactObj.location }\r\n                    image = { contactObj.image }\r\n                    address = { contactObj.address }\r\n                    state = { contactObj.state }\r\n                    company = { contactObj.company }\r\n                    phone = { contactObj.phone } />);\r\n            });\r\n            this.setState({contacts: elementsArr});\r\n            }\r\n        };\r\n        request.send();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllContacts();\r\n    }\r\n\r\n    render(){\r\n        return <div id=\"allCards\">\r\n                { this.state.contacts }\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}