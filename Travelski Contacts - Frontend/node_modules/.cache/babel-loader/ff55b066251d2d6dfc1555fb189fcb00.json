{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Num Num\\\\Desktop\\\\TravelSki-Contacts\\\\Travelski Contacts - Frontend\\\\src\\\\Components\\\\Main.js\";\nimport { Component } from \"react\";\nimport \"../Styles/styles.css\";\nimport ContactCard from \"./ContactCard\";\nimport myAjax from \"../AJAX\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.getAllContacts = this.getAllContacts.bind(this);\n    this.state = {\n      contacts: []\n    };\n  }\n\n  getAllContacts() {\n    console.log(myAjax.getAllContacts());\n    myAjax.getAllContacts().then(data => {\n      let elementsArr = [];\n      data.forEach((contactObj, index) => {\n        elementsArr.push( /*#__PURE__*/_jsxDEV(ContactCard, {\n          name: contactObj.name,\n          role: contactObj.role,\n          location: contactObj.location,\n          image: contactObj.image,\n          address: contactObj.address,\n          state: contactObj.state,\n          company: contactObj.company,\n          phone: contactObj.phone\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 34\n        }, this));\n      });\n      this.setState({\n        contacts: elementsArr\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getAllContacts();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"allCards\",\n      children: this.state.contacts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Num Num/Desktop/TravelSki-Contacts/Travelski Contacts - Frontend/src/Components/Main.js"],"names":["Component","ContactCard","myAjax","Main","constructor","getAllContacts","bind","state","contacts","console","log","then","data","elementsArr","forEach","contactObj","index","push","name","role","location","image","address","company","phone","setState","componentDidMount","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,sBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,SAAnB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA4B;AAExBI,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDH,EAAAA,cAAc,GAAE;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACG,cAAP,EAAZ;AACAH,IAAAA,MAAM,CAACG,cAAP,GAAwBM,IAAxB,CAA6BC,IAAI,IAAI;AACjC,UAAIC,WAAW,GAAG,EAAlB;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAChCH,QAAAA,WAAW,CAACI,IAAZ,eAAiB,QAAC,WAAD;AAEb,UAAA,IAAI,EAAKF,UAAU,CAACG,IAFP;AAGb,UAAA,IAAI,EAAKH,UAAU,CAACI,IAHP;AAIb,UAAA,QAAQ,EAAKJ,UAAU,CAACK,QAJX;AAKb,UAAA,KAAK,EAAKL,UAAU,CAACM,KALR;AAMb,UAAA,OAAO,EAAKN,UAAU,CAACO,OANV;AAOb,UAAA,KAAK,EAAKP,UAAU,CAACR,KAPR;AAQb,UAAA,OAAO,EAAKQ,UAAU,CAACQ,OARV;AASb,UAAA,KAAK,EAAKR,UAAU,CAACS;AATR,WACLR,KADK;AAAA;AAAA;AAAA;AAAA,gBAAjB;AAUH,OAXD;AAYA,WAAKS,QAAL,CAAc;AAACjB,QAAAA,QAAQ,EAAEK;AAAX,OAAd;AACH,KAfD;AAgBH;;AAEDa,EAAAA,iBAAiB,GAAE;AACf,SAAKrB,cAAL;AACH;;AAEDsB,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA,gBACG,KAAKpB,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAtCuB;;AAyC5B,eAAeL,IAAf","sourcesContent":["import { Component } from \"react\";\r\nimport \"../Styles/styles.css\";\r\nimport ContactCard from \"./ContactCard\";\r\nimport myAjax from \"../AJAX\";\r\n\r\nclass Main extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.getAllContacts = this.getAllContacts.bind(this);\r\n        this.state = {\r\n            contacts: []\r\n        }\r\n    }\r\n\r\n    getAllContacts(){\r\n        console.log(myAjax.getAllContacts())\r\n        myAjax.getAllContacts().then(data => {\r\n            let elementsArr = [];\r\n            data.forEach((contactObj, index) => {\r\n                elementsArr.push(<ContactCard\r\n                    key = { index }\r\n                    name = { contactObj.name }\r\n                    role = { contactObj.role }\r\n                    location = { contactObj.location }\r\n                    image = { contactObj.image }\r\n                    address = { contactObj.address }\r\n                    state = { contactObj.state }\r\n                    company = { contactObj.company }\r\n                    phone = { contactObj.phone } />);\r\n            });\r\n            this.setState({contacts: elementsArr});\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllContacts();\r\n    }\r\n\r\n    render(){\r\n        return <div id=\"allCards\">\r\n                { this.state.contacts }\r\n            </div>\r\n    }\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}